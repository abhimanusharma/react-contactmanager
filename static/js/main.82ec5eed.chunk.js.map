{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/Test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onClickDelete","delete","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","Link","to","marginRight","proppTypes","PropTypes","object","isRequired","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","e","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","EditContact","updateContact","match","params","put","Header","branding","href","About","NotFound","Test","test","console","log","nextProps","prevState","App","home_url","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"uWAGMA,EAAUC,IAAMC,gBAEhBC,EAAU,SAACC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,iBACH,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAUL,EAAMK,SAASC,OACvB,SAAAC,GAAO,OAAIA,EAAQC,KAAOP,EAAOQ,YAGvC,IAAK,cACH,OAAON,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAQ,CAAGJ,EAAOQ,SAAVC,OAAAP,OAAAQ,EAAA,EAAAR,CAAsBH,EAAMK,aAExC,IAAK,iBACH,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAUL,EAAMK,SAASO,IAAI,SAAAL,GAAO,OAClCA,EAAQC,KAAOP,EAAOQ,QAAQD,GACzBD,EAAUN,EAAOQ,QAClBF,MAGV,QACE,OAAOP,IAIAa,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAb,OAAAc,EAAA,EAAAd,CAAAe,KAAAL,GAAA,QAAAM,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAb,OAAAsB,EAAA,EAAAtB,CAAAe,MAAAH,EAAAZ,OAAAuB,EAAA,EAAAvB,CAAAU,IAAAc,KAAAC,MAAAb,EAAA,CAAAG,MAAAR,OAAAY,MACEtB,MAAQ,CACNK,SAAU,GACVwB,SAAU,SAAA5B,GACRe,EAAKc,SAAS,SAAA9B,GAAK,OAAID,EAAQC,EAAOC,OAJ5Ce,EAAA,OAAAb,OAAA4B,EAAA,EAAA5B,CAAAU,EAAAC,GAAAX,OAAA6B,EAAA,EAAA7B,CAAAU,EAAA,EAAAoB,IAAA,oBAAAC,MAAA,eAAAC,EAAAhC,OAAAiC,EAAA,EAAAjC,CAAAkC,EAAAC,EAAAC,KAAA,SAAAC,IAAA,IAAAC,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EASsBC,IAAMC,IAAI,8CAThC,OASUN,EATVE,EAAAK,KAUI9B,KAAKY,SAAS,CAAEzB,SAAUoC,EAAIQ,OAVlC,wBAAAN,EAAAO,SAAAV,EAAAtB,SAAA,yBAAAiB,EAAAP,MAAAV,KAAAE,YAAA,KAAAa,IAAA,SAAAC,MAAA,WAcI,OACEiB,EAAAb,EAAAc,cAACxD,EAAQiB,SAAT,CAAkBqB,MAAOhB,KAAKlB,OAC3BkB,KAAKmC,MAAMC,cAhBpBzC,EAAA,CAA8B0C,aAsBjBC,EAAW5D,EAAQ4D,SCjD1BC,6MACJzD,MAAQ,CACN0D,iBAAiB,KAGnBC,oDAAgB,SAAAnB,EAAOhC,EAAIqB,GAAX,OAAAQ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACRC,IAAMc,OAAN,8CAAAlD,OAA2DF,IADnD,OAGdqB,EAAS,CAAE3B,KAAM,iBAAkBO,QAASD,IAH9B,wBAAAmC,EAAAO,SAAAV,EAAAtB,yIAMP,IAAA2C,EAAA3C,KAAA4C,EAC4B5C,KAAKmC,MAAM9C,QAAtCC,EADDsD,EACCtD,GAAIuD,EADLD,EACKC,KAAMC,EADXF,EACWE,MAAOC,EADlBH,EACkBG,MACjBP,EAAoBxC,KAAKlB,MAAzB0D,gBACR,OACEP,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAS,IACAL,EAAaK,EAAbL,SACR,OACEsB,EAAAb,EAAAc,cAAA,OAAKc,UAAU,kBACbf,EAAAb,EAAAc,cAAA,UACGW,EADH,OAGEZ,EAAAb,EAAAc,cAAA,KACEe,QAAS,WACPN,EAAK/B,SAAS,CACZ4B,iBAAkBG,EAAK7D,MAAM0D,mBAGjCQ,UAAU,mBACVE,MAAO,CAAEC,OAAQ,aAEnBlB,EAAAb,EAAAc,cAAA,KACEc,UAAU,eACVE,MAAO,CAAEC,OAAQ,UAAWC,MAAO,QAASC,MAAO,OACnDJ,QAASN,EAAKF,cAAca,KAAKX,EAAMrD,EAAIqB,KAE7CsB,EAAAb,EAAAc,cAACqB,EAAA,EAAD,CAAMC,GAAE,gBAAAhE,OAAkBF,IACxB2C,EAAAb,EAAAc,cAAA,KACEc,UAAU,oBACVE,MAAO,CACLC,OAAQ,UACRC,MAAO,QACPC,MAAO,QACPI,YAAa,YAKpBjB,EACCP,EAAAb,EAAAc,cAAA,MAAIc,UAAU,cACZf,EAAAb,EAAAc,cAAA,MAAIc,UAAU,mBAAd,UAAwCF,GACxCb,EAAAb,EAAAc,cAAA,MAAIc,UAAU,mBAAd,UAAwCD,IAExC,eAtDIV,aA+DtBE,EAAQmB,WAAa,CACnBrE,QAASsE,IAAUC,OAAOC,YAEbtB,QC9CAuB,mLApBX,OACE7B,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAS,IACA7B,EAAa6B,EAAb7B,SACR,OACE8C,EAAAb,EAAAc,cAACD,EAAAb,EAAM2C,SAAP,KACE9B,EAAAb,EAAAc,cAAA,MAAIc,UAAU,kBACZf,EAAAb,EAAAc,cAAA,QAAMc,UAAU,eAAhB,WADF,SAGC7D,EAASO,IAAI,SAAAL,GAAO,OACnB4C,EAAAb,EAAAc,cAAC8B,EAAD,CAASjD,IAAK1B,EAAQC,GAAID,QAASA,gBAZ5BgD,sCCAjB4B,EAAiB,SAAAC,GAQjB,IAPJC,EAOID,EAPJC,MACAtB,EAMIqB,EANJrB,KACA7B,EAKIkD,EALJlD,MACAoD,EAIIF,EAJJE,YACApF,EAGIkF,EAHJlF,KACAqF,EAEIH,EAFJG,SACAC,EACIJ,EADJI,MAEA,OACErC,EAAAb,EAAAc,cAAA,OAAKc,UAAU,cACbf,EAAAb,EAAAc,cAAA,SAAOqC,QAAS1B,GAAOsB,GACvBlC,EAAAb,EAAAc,cAAA,SACElD,KAAMA,EACN6D,KAAMA,EACNuB,YAAaA,EACbpD,MAAOA,EACPqD,SAAUA,EACVrB,UAAWwB,IAAW,+BAAgC,CACpDC,aAAcH,MAGjBA,GAASrC,EAAAb,EAAAc,cAAA,OAAKc,UAAU,oBAAf,IAAoCsB,EAApC,OAehBL,EAAeS,aAAe,CAC5B1F,KAAM,OACNsF,MAAO,IAEML,QC2DAU,6MAlGb7F,MAAQ,CACN+D,KAAM,GACNC,MAAO,GACPC,MAAO,GACP6B,OAAQ,MAEVP,SAAW,SAAAQ,GACT/E,EAAKc,SAAL3B,OAAA6F,EAAA,EAAA7F,CAAA,GACG4F,EAAEE,OAAOlC,KAAOgC,EAAEE,OAAO/D,WAG9BgE,+CAAW,SAAA1D,EAAOX,EAAUkE,GAAjB,IAAAI,EAAApC,EAAAC,EAAAC,EAAAmC,EAAA3D,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACTkD,EAAEM,iBADOF,EAEsBnF,EAAKhB,MAA5B+D,EAFCoC,EAEDpC,KAAMC,EAFLmC,EAEKnC,MAAOC,EAFZkC,EAEYlC,MAER,KAATF,EAJK,CAAApB,EAAAE,KAAA,eAKP7B,EAAKc,SAAS,CAAEgE,OAAQ,CAAE/B,KAAM,sBALzBpB,EAAA2D,OAAA,oBAQK,KAAVtC,EARK,CAAArB,EAAAE,KAAA,eASP7B,EAAKc,SAAS,CAAEgE,OAAQ,CAAE9B,MAAO,uBAT1BrB,EAAA2D,OAAA,oBAYK,KAAVrC,EAZK,CAAAtB,EAAAE,KAAA,gBAaP7B,EAAKc,SAAS,CAAEgE,OAAQ,CAAE7B,MAAO,uBAb1BtB,EAAA2D,OAAA,yBAiBHF,EAAa,CACjBrC,OACAC,QACAC,SApBOtB,EAAAE,KAAA,GAuBSC,IAAMyD,KACtB,6CACAH,GAzBO,QAuBH3D,EAvBGE,EAAAK,KA2BTnB,EAAS,CAAE3B,KAAM,cAAeO,QAASgC,EAAIQ,OAG7CjC,EAAKc,SAAS,CACZiC,KAAM,GACNC,MAAO,GACPC,MAAO,KAETjD,EAAKqC,MAAMmD,QAAQC,KAAK,KAnCf,yBAAA9D,EAAAO,SAAAV,EAAAtB,yIAsCF,IAAA2C,EAAA3C,KAAAwF,EACgCxF,KAAKlB,MAApC+D,EADD2C,EACC3C,KAAMC,EADP0C,EACO1C,MAAOC,EADdyC,EACczC,MAAO6B,EADrBY,EACqBZ,OAC5B,OACE3C,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAS,IACAL,EAAaK,EAAbL,SACR,OACEsB,EAAAb,EAAAc,cAAA,OAAKc,UAAU,aACbf,EAAAb,EAAAc,cAAA,OAAKc,UAAU,eAAf,gBACAf,EAAAb,EAAAc,cAAA,OAAKc,UAAU,aACbf,EAAAb,EAAAc,cAAA,QAAM8C,SAAUrC,EAAKqC,SAAS1B,KAAKX,EAAMhC,IACvCsB,EAAAb,EAAAc,cAACuD,EAAD,CACEtB,MAAM,OACNtB,KAAK,OACL7B,MAAO6B,EACPuB,YAAY,eACZC,SAAU1B,EAAK0B,SACfC,MAAOM,EAAO/B,OAEhBZ,EAAAb,EAAAc,cAACuD,EAAD,CACEtB,MAAM,QACNtB,KAAK,QACL7B,MAAO8B,EACPsB,YAAY,gBACZC,SAAU1B,EAAK0B,SACfC,MAAOM,EAAO9B,QAEhBb,EAAAb,EAAAc,cAACuD,EAAD,CACEtB,MAAM,QACNtB,KAAK,QACL7B,MAAO+B,EACPqB,YAAY,gBACZC,SAAU1B,EAAK0B,SACfC,MAAOM,EAAO7B,QAEhBd,EAAAb,EAAAc,cAAA,SACElD,KAAK,SACLgC,MAAM,cACNgC,UAAU,8BAxFLX,aCqHVqD,6MApHb5G,MAAQ,CACN+D,KAAM,GACNC,MAAO,GACPC,MAAO,GACP6B,OAAQ,MAEVP,SAAW,SAAAQ,GACT/E,EAAKc,SAAL3B,OAAA6F,EAAA,EAAA7F,CAAA,GACG4F,EAAEE,OAAOlC,KAAOgC,EAAEE,OAAO/D,WAkB9BgE,+CAAW,SAAA1D,EAAOX,EAAUkE,GAAjB,IAAAI,EAAApC,EAAAC,EAAAC,EAAA4C,EAAArG,EAAAiC,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACTkD,EAAEM,iBADOF,EAEsBnF,EAAKhB,MAA5B+D,EAFCoC,EAEDpC,KAAMC,EAFLmC,EAEKnC,MAAOC,EAFZkC,EAEYlC,MAER,KAATF,EAJK,CAAApB,EAAAE,KAAA,eAKP7B,EAAKc,SAAS,CAAEgE,OAAQ,CAAE/B,KAAM,sBALzBpB,EAAA2D,OAAA,oBAQK,KAAVtC,EARK,CAAArB,EAAAE,KAAA,eASP7B,EAAKc,SAAS,CAAEgE,OAAQ,CAAE9B,MAAO,uBAT1BrB,EAAA2D,OAAA,oBAYK,KAAVrC,EAZK,CAAAtB,EAAAE,KAAA,gBAaP7B,EAAKc,SAAS,CAAEgE,OAAQ,CAAE7B,MAAO,uBAb1BtB,EAAA2D,OAAA,yBAiBHO,EAAgB,CACpB9C,OACAC,QACAC,SAGMzD,EAAOQ,EAAKqC,MAAMyD,MAAMC,OAAxBvG,GAvBCmC,EAAAE,KAAA,GAyBSC,IAAMkE,IAAN,8CAAAtG,OAC8BF,GAC9CqG,GA3BO,QAyBHpE,EAzBGE,EAAAK,KA8BTnB,EAAS,CAAE3B,KAAM,iBAAkBO,QAASgC,EAAIQ,OAGhDjC,EAAKc,SAAS,CACZiC,KAAM,GACNC,MAAO,GACPC,MAAO,KAETjD,EAAKqC,MAAMmD,QAAQC,KAAK,KAtCf,yBAAA9D,EAAAO,SAAAV,EAAAtB,6QAbDV,EAAOU,KAAKmC,MAAMyD,MAAMC,OAAxBvG,YACUsC,IAAMC,IAAN,8CAAArC,OAC8BF,WAD1CiC,SAIAlC,EAAUkC,EAAIQ,KACpB/B,KAAKY,SAAS,CACZiC,KAAMxD,EAAQwD,KACdC,MAAOzD,EAAQyD,MACfC,MAAO1D,EAAQ0D,2IA6CV,IAAAJ,EAAA3C,KAAAwF,EACgCxF,KAAKlB,MAApC+D,EADD2C,EACC3C,KAAMC,EADP0C,EACO1C,MAAOC,EADdyC,EACczC,MAAO6B,EADrBY,EACqBZ,OAC5B,OACE3C,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAS,IACAL,EAAaK,EAAbL,SACR,OACEsB,EAAAb,EAAAc,cAAA,OAAKc,UAAU,aACbf,EAAAb,EAAAc,cAAA,OAAKc,UAAU,eAAf,iBACAf,EAAAb,EAAAc,cAAA,OAAKc,UAAU,aACbf,EAAAb,EAAAc,cAAA,QAAM8C,SAAUrC,EAAKqC,SAAS1B,KAAKX,EAAMhC,IACvCsB,EAAAb,EAAAc,cAACuD,EAAD,CACEtB,MAAM,OACNtB,KAAK,OACL7B,MAAO6B,EACPuB,YAAY,eACZC,SAAU1B,EAAK0B,SACfC,MAAOM,EAAO/B,OAEhBZ,EAAAb,EAAAc,cAACuD,EAAD,CACEtB,MAAM,QACNtB,KAAK,QACL7B,MAAO8B,EACPsB,YAAY,gBACZC,SAAU1B,EAAK0B,SACfC,MAAOM,EAAO9B,QAEhBb,EAAAb,EAAAc,cAACuD,EAAD,CACEtB,MAAM,QACNtB,KAAK,QACL7B,MAAO+B,EACPqB,YAAY,gBACZC,SAAU1B,EAAK0B,SACfC,MAAOM,EAAO7B,QAEhBd,EAAAb,EAAAc,cAAA,SACElD,KAAK,SACLgC,MAAM,iBACNgC,UAAU,8BA1GJX,aCDpB0D,EAAS,SAAA5D,GAAS,IACd6D,EAAa7D,EAAb6D,SACR,OACE/D,EAAAb,EAAAc,cAAA,OAAKc,UAAU,2DACbf,EAAAb,EAAAc,cAAA,OAAKc,UAAU,aACbf,EAAAb,EAAAc,cAAA,KAAG+D,KAAK,IAAIjD,UAAU,gBACnBgD,GAEH/D,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,MAAIc,UAAU,sBACZf,EAAAb,EAAAc,cAAA,MAAIc,UAAU,YACZf,EAAAb,EAAAc,cAACqB,EAAA,EAAD,CAAMC,GAAG,IAAIR,UAAU,YACrBf,EAAAb,EAAAc,cAAA,KAAGc,UAAU,gBADf,UAIFf,EAAAb,EAAAc,cAAA,MAAIc,UAAU,YACZf,EAAAb,EAAAc,cAACqB,EAAA,EAAD,CAAMC,GAAG,eAAeR,UAAU,YAChCf,EAAAb,EAAAc,cAAA,KAAGc,UAAU,gBADf,SAIFf,EAAAb,EAAAc,cAAA,MAAIc,UAAU,YACZf,EAAAb,EAAAc,cAACqB,EAAA,EAAD,CAAMC,GAAG,SAASR,UAAU,YAC1Bf,EAAAb,EAAAc,cAAA,KAAGc,UAAU,oBADf,gBAWd+C,EAAOrB,aAAe,CACpBsB,SAAU,UAOGD,QChCAG,EAVD,WACZ,OACEjE,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,MAAIc,UAAU,aAAd,wBACAf,EAAAb,EAAAc,cAAA,KAAGc,UAAU,QAAb,iCACAf,EAAAb,EAAAc,cAAA,KAAGc,UAAU,kBAAb,mBCMSmD,EAXE,WACf,OACElE,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,MAAIc,UAAU,aAAd,OACMf,EAAAb,EAAAc,cAAA,QAAMc,UAAU,eAAhB,mBAENf,EAAAb,EAAAc,cAAA,KAAGc,UAAU,QAAb,qCCgCSoD,6MArCbtH,MAAQ,CACNuH,KAAM,2FAINC,QAAQC,IAAI,oEAGZD,QAAQC,IAAI,qEAGZD,QAAQC,IAAI,sEAGZD,QAAQC,IAAI,2EAEYC,EAAWC,GACnCH,QAAQC,IAAI,gFAOUC,EAAWC,GACjCH,QAAQC,IAAI,+DAIZ,OACEtE,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,gFAZ0BsE,EAAWC,GACzC,MAAO,CACLJ,KAAM,oBAtBOhE,aC6CJqE,gMA/BX,IAAMC,EAAW,wBACjB,OACE1E,EAAAb,EAAAc,cAAC0E,EAAD,KACE3E,EAAAb,EAAAc,cAAC2E,EAAA,EAAD,KACE5E,EAAAb,EAAAc,cAAA,OAAKc,UAAU,OACbf,EAAAb,EAAAc,cAAC4E,EAAD,CAAQd,SAAS,oBACjB/D,EAAAb,EAAAc,cAAA,OAAKc,UAAU,aACbf,EAAAb,EAAAc,cAAC6E,EAAA,EAAD,KACE9E,EAAAb,EAAAc,cAAC8E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAI,GAAA1H,OAAKmH,EAAL,KAAkBQ,UAAWrD,IAC9C7B,EAAAb,EAAAc,cAAC8E,EAAA,EAAD,CACEC,OAAK,EACLC,KAAI,GAAA1H,OAAKmH,EAAL,gBACJQ,UAAWxC,IAEb1C,EAAAb,EAAAc,cAAC8E,EAAA,EAAD,CACEC,OAAK,EACLC,KAAI,GAAA1H,OAAKmH,EAAL,qBACJQ,UAAWzB,IAEbzD,EAAAb,EAAAc,cAAC8E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAI,GAAA1H,OAAKmH,EAAL,UAAuBQ,UAAWjB,IACnDjE,EAAAb,EAAAc,cAAC8E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAI,GAAA1H,OAAKmH,EAAL,SAAsBQ,UAAWf,IAClDnE,EAAAb,EAAAc,cAAC8E,EAAA,EAAD,CAAOG,UAAWhB,gBAvBhB9D,cCFE+E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS3B,MACvB,2DCZN4B,IAASC,OAAOxF,EAAAb,EAAAc,cAACwF,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.82ec5eed.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => {\r\n      this.setState(state => reducer(state, action));\r\n    }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n    this.setState({ contacts: res.data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context\";\r\nimport axios from \"axios\";\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n\r\n  onClickDelete = async (id, dispatch) => {\r\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n  };\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body\">\r\n              <h4>\r\n                {name}\r\n                &nbsp;\r\n                <i\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      showContactInfo: !this.state.showContactInfo\r\n                    });\r\n                  }}\r\n                  className=\"fas fa-sort-down\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                  onClick={this.onClickDelete.bind(this, id, dispatch)}\r\n                />\r\n                <Link to={`contact/edit/${id}`}>\r\n                  <i\r\n                    className=\"fas fa-pencil-alt\"\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      float: \"right\",\r\n                      color: \"black\",\r\n                      marginRight: \"1rem\"\r\n                    }}\r\n                  />\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {email}</li>\r\n                  <li className=\"list-group-item\">Phone: {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.proppTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-4\">\r\n                <span className=\"text-danger\">Contact</span> List\r\n              </h1>\r\n              {contacts.map(contact => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n        className={classnames(\"form-control form-control lg\", {\r\n          \"is-invalid\": error\r\n        })}\r\n      />\r\n      {error && <div className=\"invalid-feedback\"> {error} </div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string.isRequired\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\",\r\n  error: \"\"\r\n};\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const res = await axios.post(\r\n      \"https://jsonplaceholder.typicode.com/users\",\r\n      newContact\r\n    );\r\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n\r\n    // to clear input fields\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\"\r\n    });\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contacts</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    placeholder=\"Enter Name..\"\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    placeholder=\"Enter Email..\"\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    value={phone}\r\n                    placeholder=\"Enter Phone..\"\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    const contact = res.data;\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    });\r\n  }\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    const updateContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updateContact\r\n    );\r\n\r\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\r\n\r\n    // to clear input fields\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\"\r\n    });\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contacts</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    placeholder=\"Enter Name..\"\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    placeholder=\"Enter Email..\"\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    value={phone}\r\n                    placeholder=\"Enter Phone..\"\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default EditContact;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = props => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\" /> Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\" /> Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question\" /> About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: \"My App\"\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manger</h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        404 <span className=\"text-danger\">Page Not Found</span>\r\n      </h1>\r\n      <p className=\"lead\">Sorry, that page does not exist</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Test extends Component {\r\n  state = {\r\n    test: \"test\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(\"Component did mount\");\r\n  }\r\n  componentWillMount() {\r\n    console.log(\"Component will mount\");\r\n  }\r\n  componentDidUpdate() {\r\n    console.log(\"Component did update\");\r\n  }\r\n  componentWillUpdate() {\r\n    console.log(\"Component will update\");\r\n  }\r\n  componentWillReceiveProps(nextProps, prevState) {\r\n    console.log(\"Component will receive props\");\r\n  }\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    return {\r\n      test: \"Something\"\r\n    };\r\n  }\r\n  getSnapshotBeforeUpdate(nextProps, prevState) {\r\n    console.log(\"Get Snapshot before update\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Test Component</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport { Provider } from \"./context\";\nimport Test from \"./components/Test/Test\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    const home_url = \"/react-contactmanager\";\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path={`${home_url}/`} component={Contacts} />\n                <Route\n                  exact\n                  path={`${home_url}/contact/add`}\n                  component={AddContact}\n                />\n                <Route\n                  exact\n                  path={`${home_url}/contact/edit/:id`}\n                  component={EditContact}\n                />\n                <Route exact path={`${home_url}/about`} component={About} />\n                <Route exact path={`${home_url}/test`} component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}